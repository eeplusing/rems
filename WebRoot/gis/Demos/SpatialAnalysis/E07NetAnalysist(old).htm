<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>网络分析</title>
    <script src="../../Libs/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../../Libs/OpenLayers.js" type="text/javascript"></script>
    <script src="../../Libs/zdclient.js" type="text/javascript"></script>
    <link href="../../CSS/ZondyDemoStyle.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">
        var vectors, lineFeature; //存放线路 
        var map, vectorLayer;

        //地图初始化函数
        $(function () {
            //初始化地图容器
            map = new OpenLayers.Map('mapCon', {
                //地图的缩放级别
                numZoomLevels: 10,
                //地图的最大范围
                maxExtent: new OpenLayers.Bounds(114.42204, 38, 114.57798, 38.092545),
                //地图常用工具控件
                controls: [
                    new OpenLayers.Control.PanZoomBar(), //缩放面板的工具控件
                    new OpenLayers.Control.LayerSwitcher(), //图层切换控件
                    new OpenLayers.Control.Navigation(), //此控件处理伴随鼠标事件的地图浏览
                    new OpenLayers.Control.MousePosition(),  //此控件显示鼠标移动时，所在点的地理坐标
                    new OpenLayers.Control.OverviewMap()     //鹰眼
                ]
            });

            //初始化矢量图层对象
            vectorLayer = new Zondy.Map.Layer("MapGIS IGS VectorLayer", ["gdbp://MapGisLocal/sample/ds/网络分析/ncls/道路交通网"], {
                //矢量图层地图服务器ip
                ip: "127.0.0.1",
                //矢量图层地图服务端口
                port: "6163",
                //是否作为基础显示图层，默认为true
                isBaseLayer: true
            });

            //将矢量图层加载到地图中
            map.addLayers([vectorLayer]);

            //设置地图的初始化显示中心和级别
            map.setCenter(new OpenLayers.LonLat(0, 0), 2);
        }); 



        //执行路径分析
        function pathAnalysis() {
            var netAnalyParam = new Zondy.Service.NetAnalysis({
                netClsUrl: "gdbp://MapGisLocal/sample/ds/网络分析/ncls/道路交通网", 	//设置网络类URL
                flagPosStr: "114.44,38.06,114.56,38.03", 	    //指定感兴趣路径点坐标序列
                analyTp: 'UserMode', 			    //分析类型：用户自定义
                weight: ",Weight1,Weight1",  				//设置网络类某些属性字段为权值字段
                elementType: 2, 				    //网络类型：1/2:节点网标/线网标
                nearDis: 0.01, 					    //设置网标搜索半径
                barrierPosStr: "",  	//设置障碍点的坐标序列
                outFormat: 'JSON'
            });

            netAnalyParam.execute(AnalysisSuccess,"POST");
        }
        
        //分析成功后的回调
        function AnalysisSuccess(data) {
            if (data.results) {
                var result = data.results[0].Value; //返回的分析结果数据
                var resultObj = $.parseJSON(result);
                if(resultObj==null||resultObj.Paths==null) {
                    return;
                }
                var pathObj = resultObj.Paths[0];
                var edgeNum = pathObj.Edges.length;
                var pathArr = new Array();
                var resDiv = '<b>1.</b><font color="#FF0000"><b>从起点</b></font>(114.49,38.05 )<font color="#FF0000"><b>出发</b></font>';
                for(var i=0;i<edgeNum-1;i++) {
                    var edge = pathObj.Edges[i];
                    var edge1 = pathObj.Edges[i + 1];
                    if(i==0) {
                        var dots = new OpenLayers.Geometry.Point(edge1.Dots[0].x, edge1.Dots[0].y);
                        resDiv += '&nbsp;&nbsp;&nbsp;经' + edge.FieldValus[2]+'('+ dots.x+','+ dots.y+')';
                    }//i=0
                    if(i!=edgeNum-2) {
                        if(edge.FieldValus[2]!=edge1.FieldValus[2]&&edge1.FieldValus[2]!="") {
                            var dots1 = new OpenLayers.Geometry.Point(edge1.Dots[0].x, edge1.Dots[0].y);
                            resDiv += '&nbsp;&nbsp;&nbsp;到达' + edge.FieldValus[2] + '(' + dots1.x + ',' + dots1.y + ')';
                        }//
                    } //i!=edgeNum-2
                    else {
                        var dots4 = new OpenLayers.Geometry.Point(edge1.Dots[0].x, edge1.Dots[0].y);
                        resDiv += '<font color="#FF0000"><b>到达终点</b></font>(114.50,38.05)';
                    }
                    var dotNum = edge.Dots.length;
                    for(var j=0;j<dotNum;j++) {
                        var dot = new OpenLayers.Geometry.Point(edge.Dots[j].x, edge.Dots[j].y);
                        pathArr.push(dot);
                    } //for(j)

                }
                //绘制路径
                $("#resultInfo").append(resDiv);
                drawPath(pathArr);
            } else {
                alert("路径分析失败，请检查参数！");
            }
        }


        function drawPath(pathArr) {
            
            //线路样式 
            var styleGreen = {
                strokeColor: "#FF0000",
                strokeWidth: 3,
                strokeDashstyle: "solid",
                pointRadius: 6,
                pointerEvents: "visiblePainted"
            };

            //画线图层设置 
            var layerStyle = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
            layerStyle.fillOpacity = 0.2;
            layerStyle.graphicOpacity = 1;

            //画线图层 
            vectors = new OpenLayers.Layer.Vector("Simple Geometry", { style: layerStyle });
            map.addLayer(vectors);

            //一下采用数组型式填充轨迹 
            var pointList = [];
            for (var i = 0; i < pathArr.length; i++) {
                var newPoint = new OpenLayers.Geometry.Point(pathArr[i].x, pathArr[i].y);
                pointList.push(newPoint);
            }
            lineFeature = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(pointList), null, styleGreen);
            vectors.addFeatures([lineFeature]);
        }
        
    </script>
</head>
<body>
    <div id="header">
        <span id="title">MapGIS IGServer NetAnalysis Example</span> 
        <span id="shortdesc">网络分析</span>
    </div>
    <table id="contentTable">
        <tr id="contentTableRow">
            <td id="mapSpanelCon">
                <!--地图显示-->
                <div id="mapCon">
                </div>
            </td>
            <td id="toolSpanelCon">
                <div id="toolspanel">
                    <p>
                        网络分析</p>
                    <input type="button" id="pathAnalyBtn" class="functionButton" value="网络分析" onclick="pathAnalysis()" /><br/>
                    <div id="resultInfo" class="lineStyle">分析结果：</div>
                </div>
            </td>
        </tr>
    </table>
</body>
</html>
