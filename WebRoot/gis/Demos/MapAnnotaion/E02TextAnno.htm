<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>显示文字注记</title>
    <!--导入外部样式表-->
    <link href="../../CSS/ZondyDemoStyle.css" rel="stylesheet" type="text/css" />
    <!--必要的脚本引用-->
    <script src="../../Libs/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../../Libs/OpenLayers.js" type="text/javascript"></script>
    <script src="../../Libs/zdclient.js" type="text/javascript"></script>
    <script type="text/javascript">
        var map, vectorMapdoc;

        //地图初始化函数
        function init() {
            //初始化地图容器
            map = new OpenLayers.Map('mapCon', {
                //地图的缩放级别
                numZoomLevels: 10,
                //地图的最大范围
                maxExtent: new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34),       
                controls: [
                    new OpenLayers.Control.PanZoomBar(),                    //缩放面板的工具控件
                    new OpenLayers.Control.LayerSwitcher(),                 //图层切换控件
                    new OpenLayers.Control.Navigation(),                    //此控件处理伴随鼠标事件的地图浏览
                    new OpenLayers.Control.MousePosition()                 //此控件显示鼠标移动时，所在点的地理坐标
                ]
            });
            //初始化地图文档图层对象
            vectorMapdoc = new Zondy.Map.Doc("MapGIS IGS VectorMapdocLayer", "WorldMKTVector", {
                //矢量地图文档地图服务器ip
                ip: "127.0.0.1",
                //矢量地图文档地图服务端口
                port: "6163",
                //是否作为基础显示图层，默认为true，表示最为基础显示图层
                isBaseLayer: true
            });
            //将地图文档图层加载到地图中
            map.addLayers([vectorMapdoc]);
            //设置地图的初始化显示中心和级别
            map.setCenter(new OpenLayers.LonLat(12014797, 4128842), 4);

            var renderer = OpenLayers.Util.getParameters(window.location.href).renderer;
            renderer = (renderer) ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers;
            var marker = new OpenLayers.Layer.Vector("markersLayer", {
                styleMap: new OpenLayers.StyleMap({ 'default': {
                    strokeColor: "red", //#00FF00
                    strokeOpacity: 1,
                    strokeWidth: 6,
                    fillColor: "blue", //#FF5500
                    fillOpacity: 1,
                    pointRadius: 3,
                    pointerEvents: "visiblePainted",
                    label: "${name}",  // label with \n linebreaks                    
                    fontColor: "${favColor}",
                    fontSize: "14px",
                    fontFamily: "Vrinda", //Times New Roman
                    fontWeight: "bold",
                    labelOutlineColor: "",
                    labelOutlineWidth: 4,
                    labelXOffset: "${xOffset}",
                    labelYOffset: "${yOffset}"
                }
                }),
                renderers: renderer
            });
            var features = [];
            var point = [{ lon: "104.06", lat: "30.67" }, { lon: "106.33", lat: "29.35" }, { lon: "114.31667", lat: "30.51667" }, { lon: "113.00000", lat: "28.21667"}];
            var lonlat = [];
            for (var i = 0; i < 4; i++) {
                lonlat[i] = new OpenLayers.LonLat(point[i].lon, point[i].lat).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));
            }
            point[0] = new OpenLayers.Geometry.Point(lonlat[0].lon, lonlat[0].lat);
            features[0] = new OpenLayers.Feature.Vector(point[0]);
            features[0].attributes = { name: "成都", favColor: "rgb(255,128,64)", xOffset: 20, yOffset: 20 };
            point[1] = new OpenLayers.Geometry.Point(lonlat[1].lon, lonlat[1].lat);
            features[1] = new OpenLayers.Feature.Vector(point[1]);
            features[1].attributes = { name: "重庆", favColor: "rgb(0,64,128)", xOffset: 20, yOffset: 20 };
            point[2] = new OpenLayers.Geometry.Point(lonlat[2].lon, lonlat[2].lat);
            features[2] = new OpenLayers.Feature.Vector(point[2]);
            features[2].attributes = { name: "武汉", favColor: "rgb(255,0,128)", xOffset: 20, yOffset: 20 };
            point[3] = new OpenLayers.Geometry.Point(lonlat[3].lon, lonlat[3].lat);
            features[3] = new OpenLayers.Feature.Vector(point[3]);
            features[3].attributes = { name: "长沙", favColor: "rgb(0,128,64)", xOffset: 20, yOffset: 20 };

            marker.addFeatures(features);
            map.addLayer(marker);
        }  
    </script>
</head>
<body onload="init();">
    <div id="header">
        <span id="title">MapGIS IGServer Textannotation Example</span> 
        <span id="shortdesc">显示文字注记</span>
    </div>
    <div id="mapCon">
    </div>
</body>
</html>
